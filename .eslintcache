[{"/Users/pardhunamburi/Documents/GitHub/meet/src/index.js":"1","/Users/pardhunamburi/Documents/GitHub/meet/src/serviceWorkerRegistration.js":"2","/Users/pardhunamburi/Documents/GitHub/meet/src/App.js":"3","/Users/pardhunamburi/Documents/GitHub/meet/src/reportWebVitals.js":"4","/Users/pardhunamburi/Documents/GitHub/meet/src/EventList.js":"5","/Users/pardhunamburi/Documents/GitHub/meet/src/NumberOfEvents.js":"6","/Users/pardhunamburi/Documents/GitHub/meet/src/CitySearch.js":"7","/Users/pardhunamburi/Documents/GitHub/meet/src/api.js":"8","/Users/pardhunamburi/Documents/GitHub/meet/src/mock-data.js":"9","/Users/pardhunamburi/Documents/GitHub/meet/src/Event.js":"10","/Users/pardhunamburi/Documents/GitHub/meet/src/Alert.js":"11","/Users/pardhunamburi/Documents/GitHub/meet/src/alert.js":"12"},{"size":917,"mtime":1625335756089,"results":"13","hashOfConfig":"14"},{"size":5064,"mtime":1625278104715,"results":"15","hashOfConfig":"14"},{"size":2417,"mtime":1625335844846,"results":"16","hashOfConfig":"14"},{"size":364,"mtime":1619231778000,"results":"17","hashOfConfig":"14"},{"size":641,"mtime":1623270984355,"results":"18","hashOfConfig":"14"},{"size":1118,"mtime":1625329308993,"results":"19","hashOfConfig":"14"},{"size":2157,"mtime":1625329211589,"results":"20","hashOfConfig":"14"},{"size":3395,"mtime":1625335711276,"results":"21","hashOfConfig":"14"},{"size":41353,"mtime":1619231778000,"results":"22","hashOfConfig":"14"},{"size":1272,"mtime":1623445970360,"results":"23","hashOfConfig":"14"},{"size":862,"mtime":1625329253029,"results":"24","hashOfConfig":"14"},{"size":862,"mtime":1625329178583,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1surw4i",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pardhunamburi/Documents/GitHub/meet/src/index.js",[],["52","53"],"/Users/pardhunamburi/Documents/GitHub/meet/src/serviceWorkerRegistration.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/App.js",["54"],"/Users/pardhunamburi/Documents/GitHub/meet/src/reportWebVitals.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/EventList.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/NumberOfEvents.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/CitySearch.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/api.js",["55","56"],"import { mockData } from \"./mock-data\";\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const limitEvents = (events, number) => {\n    let limitedList = [];\n    for (let i = 0; i < number; i++) {\n        if (events[i]) {\n            limitedList.push(events[i]);\n        }\n    };\n    return limitedList;\n}\n\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n}\n\nconst checkToken = async (accessToken) => {\n    const result = await fetch(\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n\n    return result;\n};\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        var newurl =\n            window.location.protocol +\n            \"//\" +\n            window.location.host +\n            window.location.pathname;\n        window.history.pushState(\"\", \"\", newurl);\n    } else {\n        newurl = window.location.protocol + \"//\" + window.location.host;\n        window.history.pushState(\"\", \"\", newurl);\n    }\n};\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n        'https://4oohy05o8d.execute-api.us-east-2.amazonaws.com/dev/api/token' + '/' + encodeCode\n    )\n        .then((res) => {\n            return res.json();\n        })\n        .catch((error) => error);\n\n    access_token && localStorage.setItem(\"access_token\", access_token);\n\n    return access_token;\n};\n\nexport const getEvents = async () => {\n    NProgress.start();\n  \n    if (\n      !navigator.onLine &&\n      !window.location.href.startsWith('http://localhost')\n    ) {\n      const events = localStorage.getItem('lastEvents');\n      NProgress.done();\n      return JSON.parse(events).events;\n    }\n  \n    if (window.location.href.startsWith('http://localhost')) {\n      NProgress.done();\n      return mockData;\n    }\n\n    const token = await getAccessToken();\n\n    if (token) {\n        removeQuery();\n        const url = 'hhttps://4oohy05o8d.execute-api.us-east-2.amazonaws.com/dev/api/get-events' + '/' + token;\n        const result = await axios.get(url);\n        if (result.data) {\n            var locations = extractLocations(result.data.events);\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\n        }\n        NProgress.done();\n        return result.data.events;\n    }\n}\n\nexport const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem(\"access_token\");\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get(\"code\");\n        if (!code) {\n            const results = await axios.get(\n                \"https://4oohy05o8d.execute-api.us-east-2.amazonaws.com/dev/api/get-auth-url\"\n            );\n            const { authUrl } = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n}\n","/Users/pardhunamburi/Documents/GitHub/meet/src/mock-data.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/Event.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/Alert.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/alert.js",[],{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":7,"column":21,"nodeType":"63","messageId":"64","endLine":7,"endColumn":33},{"ruleId":"65","severity":1,"message":"66","line":48,"column":80,"nodeType":"67","messageId":"68","endLine":48,"endColumn":81},{"ruleId":"65","severity":1,"message":"66","line":81,"column":98,"nodeType":"67","messageId":"68","endLine":81,"endColumn":99},"no-native-reassign",["69"],"no-negated-in-lhs",["70"],"no-unused-vars","'WarningAlert' is defined but never used.","Identifier","unusedVar","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]