[{"/Users/pardhunamburi/Documents/GitHub/meet/src/index.js":"1","/Users/pardhunamburi/Documents/GitHub/meet/src/serviceWorkerRegistration.js":"2","/Users/pardhunamburi/Documents/GitHub/meet/src/App.js":"3","/Users/pardhunamburi/Documents/GitHub/meet/src/reportWebVitals.js":"4","/Users/pardhunamburi/Documents/GitHub/meet/src/EventList.js":"5","/Users/pardhunamburi/Documents/GitHub/meet/src/NumberOfEvents.js":"6","/Users/pardhunamburi/Documents/GitHub/meet/src/CitySearch.js":"7","/Users/pardhunamburi/Documents/GitHub/meet/src/api.js":"8","/Users/pardhunamburi/Documents/GitHub/meet/src/mock-data.js":"9","/Users/pardhunamburi/Documents/GitHub/meet/src/Event.js":"10"},{"size":818,"mtime":1619231778000,"results":"11","hashOfConfig":"12"},{"size":5064,"mtime":1619231778000,"results":"13","hashOfConfig":"12"},{"size":2140,"mtime":1623270997201,"results":"14","hashOfConfig":"12"},{"size":364,"mtime":1619231778000,"results":"15","hashOfConfig":"12"},{"size":641,"mtime":1623270984355,"results":"16","hashOfConfig":"12"},{"size":761,"mtime":1619231778000,"results":"17","hashOfConfig":"12"},{"size":1782,"mtime":1619231778000,"results":"18","hashOfConfig":"12"},{"size":3164,"mtime":1619231778000,"results":"19","hashOfConfig":"12"},{"size":41353,"mtime":1619231778000,"results":"20","hashOfConfig":"12"},{"size":1272,"mtime":1623445970360,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1surw4i",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pardhunamburi/Documents/GitHub/meet/src/index.js",[],["44","45"],"/Users/pardhunamburi/Documents/GitHub/meet/src/serviceWorkerRegistration.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/App.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/reportWebVitals.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/EventList.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/NumberOfEvents.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/CitySearch.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/api.js",["46","47"],"import { mockData } from \"./mock-data\";\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const limitEvents = (events, number) => {\n    let limitedList = [];\n    for (let i = 0; i < number; i++) {\n        if (events[i]) {\n            limitedList.push(events[i]);\n        }\n    };\n    return limitedList;\n}\n\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n}\n\nconst checkToken = async (accessToken) => {\n    const result = await fetch(\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n\n    return result;\n};\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        var newurl =\n            window.location.protocol +\n            \"//\" +\n            window.location.host +\n            window.location.pathname;\n        window.history.pushState(\"\", \"\", newurl);\n    } else {\n        newurl = window.location.protocol + \"//\" + window.location.host;\n        window.history.pushState(\"\", \"\", newurl);\n    }\n};\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n        'https://4oohy05o8d.execute-api.us-east-2.amazonaws.com/dev/api/token' + '/' + encodeCode\n    )\n        .then((res) => {\n            return res.json();\n        })\n        .catch((error) => error);\n\n    access_token && localStorage.setItem(\"access_token\", access_token);\n\n    return access_token;\n};\n\nexport const getEvents = async () => {\n    NProgress.start();\n\n    if (window.location.href.startsWith(\"http://localhost\")) {\n        NProgress.done();\n        return mockData;\n    }\n\n\n    const token = await getAccessToken();\n\n    if (token) {\n        removeQuery();\n        const url = 'hhttps://4oohy05o8d.execute-api.us-east-2.amazonaws.com/dev/api/get-events' + '/' + token;\n        const result = await axios.get(url);\n        if (result.data) {\n            var locations = extractLocations(result.data.events);\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\n        }\n        NProgress.done();\n        return result.data.events;\n    }\n}\n\nexport const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem(\"access_token\");\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get(\"code\");\n        if (!code) {\n            const results = await axios.get(\n                \"https://4oohy05o8d.execute-api.us-east-2.amazonaws.com/dev/api/get-auth-url\"\n            );\n            const { authUrl } = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n}","/Users/pardhunamburi/Documents/GitHub/meet/src/mock-data.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/Event.js",[],{"ruleId":"48","replacedBy":"49"},{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","severity":1,"message":"53","line":48,"column":80,"nodeType":"54","messageId":"55","endLine":48,"endColumn":81},{"ruleId":"52","severity":1,"message":"53","line":73,"column":98,"nodeType":"54","messageId":"55","endLine":73,"endColumn":99},"no-native-reassign",["56"],"no-negated-in-lhs",["57"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]