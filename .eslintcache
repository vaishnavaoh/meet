[{"/Users/pardhunamburi/Documents/GitHub/meet/src/index.js":"1","/Users/pardhunamburi/Documents/GitHub/meet/src/serviceWorkerRegistration.js":"2","/Users/pardhunamburi/Documents/GitHub/meet/src/App.js":"3","/Users/pardhunamburi/Documents/GitHub/meet/src/reportWebVitals.js":"4","/Users/pardhunamburi/Documents/GitHub/meet/src/EventList.js":"5","/Users/pardhunamburi/Documents/GitHub/meet/src/NumberOfEvents.js":"6","/Users/pardhunamburi/Documents/GitHub/meet/src/CitySearch.js":"7","/Users/pardhunamburi/Documents/GitHub/meet/src/api.js":"8","/Users/pardhunamburi/Documents/GitHub/meet/src/mock-data.js":"9","/Users/pardhunamburi/Documents/GitHub/meet/src/Event.js":"10","/Users/pardhunamburi/Documents/GitHub/meet/src/Alert.js":"11"},{"size":600,"mtime":1625189096207,"results":"12","hashOfConfig":"13"},{"size":5064,"mtime":1619231778000,"results":"14","hashOfConfig":"13"},{"size":2140,"mtime":1623270997201,"results":"15","hashOfConfig":"13"},{"size":364,"mtime":1619231778000,"results":"16","hashOfConfig":"13"},{"size":641,"mtime":1623270984355,"results":"17","hashOfConfig":"13"},{"size":761,"mtime":1619231778000,"results":"18","hashOfConfig":"13"},{"size":2157,"mtime":1625277683667,"results":"19","hashOfConfig":"13"},{"size":3164,"mtime":1619231778000,"results":"20","hashOfConfig":"13"},{"size":41353,"mtime":1619231778000,"results":"21","hashOfConfig":"13"},{"size":1272,"mtime":1623445970360,"results":"22","hashOfConfig":"13"},{"size":862,"mtime":1625277524191,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"1surw4i",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"26"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/pardhunamburi/Documents/GitHub/meet/src/index.js",[],["49","50"],"/Users/pardhunamburi/Documents/GitHub/meet/src/serviceWorkerRegistration.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/App.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/reportWebVitals.js",[],["51","52"],"/Users/pardhunamburi/Documents/GitHub/meet/src/EventList.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/NumberOfEvents.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/CitySearch.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/api.js",["53","54"],"import { mockData } from \"./mock-data\";\nimport axios from 'axios';\nimport NProgress from 'nprogress';\n\nexport const limitEvents = (events, number) => {\n    let limitedList = [];\n    for (let i = 0; i < number; i++) {\n        if (events[i]) {\n            limitedList.push(events[i]);\n        }\n    };\n    return limitedList;\n}\n\nexport const extractLocations = (events) => {\n    var extractLocations = events.map((event) => event.location);\n    var locations = [...new Set(extractLocations)];\n    return locations;\n}\n\nconst checkToken = async (accessToken) => {\n    const result = await fetch(\n        `https://www.googleapis.com/oauth2/v1/tokeninfo?access_token=${accessToken}`\n    )\n        .then((res) => res.json())\n        .catch((error) => error.json());\n\n    return result;\n};\n\nconst removeQuery = () => {\n    if (window.history.pushState && window.location.pathname) {\n        var newurl =\n            window.location.protocol +\n            \"//\" +\n            window.location.host +\n            window.location.pathname;\n        window.history.pushState(\"\", \"\", newurl);\n    } else {\n        newurl = window.location.protocol + \"//\" + window.location.host;\n        window.history.pushState(\"\", \"\", newurl);\n    }\n};\n\nconst getToken = async (code) => {\n    const encodeCode = encodeURIComponent(code);\n    const { access_token } = await fetch(\n        'https://4oohy05o8d.execute-api.us-east-2.amazonaws.com/dev/api/token' + '/' + encodeCode\n    )\n        .then((res) => {\n            return res.json();\n        })\n        .catch((error) => error);\n\n    access_token && localStorage.setItem(\"access_token\", access_token);\n\n    return access_token;\n};\n\nexport const getEvents = async () => {\n    NProgress.start();\n\n    if (window.location.href.startsWith(\"http://localhost\")) {\n        NProgress.done();\n        return mockData;\n    }\n\n\n    const token = await getAccessToken();\n\n    if (token) {\n        removeQuery();\n        const url = 'hhttps://4oohy05o8d.execute-api.us-east-2.amazonaws.com/dev/api/get-events' + '/' + token;\n        const result = await axios.get(url);\n        if (result.data) {\n            var locations = extractLocations(result.data.events);\n            localStorage.setItem(\"lastEvents\", JSON.stringify(result.data));\n            localStorage.setItem(\"locations\", JSON.stringify(locations));\n        }\n        NProgress.done();\n        return result.data.events;\n    }\n}\n\nexport const getAccessToken = async () => {\n    const accessToken = localStorage.getItem('access_token');\n    const tokenCheck = accessToken && (await checkToken(accessToken));\n\n    if (!accessToken || tokenCheck.error) {\n        await localStorage.removeItem(\"access_token\");\n        const searchParams = new URLSearchParams(window.location.search);\n        const code = await searchParams.get(\"code\");\n        if (!code) {\n            const results = await axios.get(\n                \"https://4oohy05o8d.execute-api.us-east-2.amazonaws.com/dev/api/get-auth-url\"\n            );\n            const { authUrl } = results.data;\n            return (window.location.href = authUrl);\n        }\n        return code && getToken(code);\n    }\n    return accessToken;\n}","/Users/pardhunamburi/Documents/GitHub/meet/src/mock-data.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/Event.js",[],"/Users/pardhunamburi/Documents/GitHub/meet/src/Alert.js",[],{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"55","replacedBy":"59"},{"ruleId":"57","replacedBy":"60"},{"ruleId":"61","severity":1,"message":"62","line":48,"column":80,"nodeType":"63","messageId":"64","endLine":48,"endColumn":81},{"ruleId":"61","severity":1,"message":"62","line":73,"column":98,"nodeType":"63","messageId":"64","endLine":73,"endColumn":99},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],["65"],["66"],"no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation"]